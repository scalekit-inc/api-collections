meta {
  name: Create Organization
  type: http
  seq: 3
}

post {
  url: {{env_url}}/api/v1/organizations
  body: json
  auth: oauth2
}

headers {
  Content-Type: application/json
  Accept: application/json
}

auth:oauth2 {
  grant_type: client_credentials
  access_token_url: {{env_url}}/oauth/token
  refresh_token_url: {{env_url}}/oauth/token
  client_id: {{client_id}}
  client_secret: {{client_secret}}
  scope: 
  credentials_placement: body
  credentials_id: 
  token_placement: header
  token_header_prefix: 
  auto_fetch_token: true
  auto_refresh_token: false
}

body:json {
  {
      "display_name": "Looney Corp",
      "external_id": "my_unique_id"
  }
}

tests {
  // Updates the "example_org" variable, so that you can explore Update or Get APIs
  const responseJson = res.getBody();
  
  let example_org_id = responseJson.organization.id
  
  if (responseJson.organization.id) {
      bru.setEnvVar("example_org", example_org_id);
  } else {
      console.log("No organization.id found in the response.");
  }
}
